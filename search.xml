<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ubuntu server设置开启程序自启动]]></title>
    <url>%2FmyBlog.github.io%2F2018%2F11%2F26%2Fubuntu-server%E8%AE%BE%E7%BD%AE%E5%BC%80%E5%90%AF%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%90%AF%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[在项目中经常遇到需要服务器开机自启动相关程序的情况，下面以一个neo4j数据库和spring boot web程序为例撰写了一个demo 编写一个启动所有程序的脚本注意有些程序有前后依赖关系可以sleep几秒等一下 Ubuntu下添加开机启动脚本 # vim /etc/rc.local #配置启动执行的log日志，方便调试，错误查看 exec 1&gt;/tmp/rc.local.log 2&gt;&amp;1 # send stdout and stderr from rc.local to a log file set -x # tell sh to display commands before execution #rc.local中识别不到java，需要配置jdk环境变量 export JAVA_HOME=/opt/java/jdk1.8.0_102 export JRE_HOME=${JAVA_HOME}/jre export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib export PATH=${JAVA_HOME}/bin:${PATH} # 最后执行编写好的启动脚本即可 /iflytek/bin/startAllService.sh exit 0 Ubuntu开机之后会执行/etc/rc.local文件中的脚本，所以我们可以直接在/etc/rc.local中添加启动脚本。当然要添加到语句：exit 0 前面才行。 重启测试即可]]></content>
  </entry>
  <entry>
    <title><![CDATA[linux部署JDK8]]></title>
    <url>%2FmyBlog.github.io%2F2018%2F11%2F26%2Flinux%E9%83%A8%E7%BD%B2JDK8%2F</url>
    <content type="text"><![CDATA[经常会遇到linux服务器需要部署JDK8的情况，每次都是临时百度或者翻文档，索性不如花几分钟整理成博客，为以后方便也可以分享给大家。 （以jdk-8u102-linux-x64.tar.gz为例） 1 安装以root用户登录 # mkdir /opt/java # tar -zxvf jdk-8u102-linux-x64.tar.gz -C /opt/java # chown -R root:root /opt/java 2 配置环境变量切换到需要安装jdk的用户（以es为例） # su iflytek $ vim ~/.bashrc （在文件最后添加如下内容） export JAVA_HOME=/opt/java/jdk1.8.0_102 export JRE_HOME=${JAVA_HOME}/jre export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib export PATH=${JAVA_HOME}/bin:${PATH} 执行文件使其生效 $ source ~/.bashrc 3 验证验证jdk是否安装成功 $ java -version 出现下图则安装成功]]></content>
  </entry>
  <entry>
    <title><![CDATA[使用github+hexo搭建自己的个人博客]]></title>
    <url>%2FmyBlog.github.io%2F2018%2F11%2F22%2F%E6%B5%8B%E8%AF%95%E6%96%B0%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[前提不再赘述： 1、有github账户 2、安装node js 3、本地安装了git （安装后进行config –global初始配置，包括创建上传ssh key到github账户） 正式开始： 1、先进入本地与github关联的仓库目录下，我的是 /f/git_repository/，新建 myBlog目录 打开git bash命令工具 cd /f/git_repository/myBlog 2、初始化 $ hexo init 3、生成静态页面 初始化完成之后，就已经生成一篇“hello word”的文章了，现在执行以下命令把文章编译为静态页面： $ hexo generate 4、本地启动 把文章变为页面之后，可以执行以下命令，本地启动服务，在浏览器中输入http://localhost:4000/查看生成的页面效果 hexo server 这时开始出现了问题执行命令hexo server，提示：Usage: hexo …. 提示找不到该server指令 解决方法，在Hexo 3.0 后server被单独出来了，需要安装server，安装此server后再试，问题解决。安装的命令如下（我用git bash执行报错了，切换到win cmd执行成功）： npm install hexo-server –save 4、重新编译启动，执行：hexo server，启动了服务，在浏览器输入本地地址访问，看到白板和Cannot GET / 几个字 1234567在Hexo博客中，出现Cannot GET/xxx错误便意味着xxx文件未被找到。Cannot GET/xxx错误本质是hexo server返回的一个404错误。开始查找原因 网上说是由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：npm install hexo-renderer-ejs--savenpm install hexo-renderer-stylus--savenpm install hexo-renderer-marked--save 三条命令执行完这时候重新启动本地服务再访问还是不行 因此，继续排查方式如下： 1.判断public目录下xxx文件是否存在。 （我的错误是 Cannot GET /，因此在public目录下寻找index.html是否存在。） 2.如果说index.html不存在，那么执行hexo c，hexo g重新生成一次，回到步骤1。 3.步骤2执行完后index.html仍不存在，执行npm audit fix，查看是否少了什么组件，通过npm install hexo-xxx-xxx 安装即可。 $ npm audit fix （我的hexo缺少了hexo-generator-archive等组件，因此执行npm install hexo-generator-archive …即可）。 npm install hexo-generator-archive 4.步骤3完成之后，执行hexo clean，hexo g重新生成静态文件。 5、再次启动 hexo server 访问http://localhost:4000/ 终于成功，显示的是一个默认界面 自定义美化 1、切换主题 1234567admin@zhensun2 MINGW64 /f/git_repository/myBlog$ git clone https://github.com/iissnan/hexo-theme-next.git themes/nextCloning into &apos;themes/next&apos;...remote: Enumerating objects: 12033, done.remote: Total 12033 (delta 0), reused 0 (delta 0), pack-reused 12033Receiving objects: 100% (12033/12033), 12.95 MiB | 547.00 KiB/s, done.Resolving deltas: 100% (6966/6966), done. 2、切换主题后进行一些自定义美化设置 3、利用hexo-admin工具进行管理、发布文章等 1$ npm install --save hexo-admin 最终部署 部署到github前需要修改根目录_config.yml，不然会出现访问github pages网页只有文字没有样式的情况 具体可以参考这个文章 [hexo + github pages搭建博客样式加载不出来](https://blog.csdn.net/banjw_129/article/details/82261165) 添加评论组件 评论组件选用了韩国的来比力，详情参考了这篇文章： [Hexo-NexT主题添加评论功能（来必力、Hypercomments、畅言、友言）](https://blog.csdn.net/qq_32454537/article/details/79482879)]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2FmyBlog.github.io%2F2018%2F11%2F22%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>test</tag>
      </tags>
  </entry>
</search>
